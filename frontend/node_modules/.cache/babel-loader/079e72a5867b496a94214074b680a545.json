{"ast":null,"code":"import _slicedToArray from \"/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/src/components/Blockchain.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nconst PAGE_RANGE = 3;\n\nfunction Blockchain() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blockchain = _useState2[0],\n        setBlockchain = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        blockchainLength = _useState4[0],\n        setBlockchainLength = _useState4[1];\n\n  const fetchBlockchainPage = ({\n    start,\n    end\n  }) => {\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`).then(response => response.json()).then(json => setBlockchain(json));\n  };\n\n  useEffect(() => {\n    fetchBlockchainPage({\n      start: 0,\n      end: PAGE_RANGE\n    });\n    fetch(`${API_BASE_URL}/blockchain/length`).then(response => response.json()).then(json => setBlockchainLength(json));\n  }, []);\n  const buttonNumbers = [];\n\n  for (let i = 0; i < Math.ceil(blockchainLength / PAGE_RANGE); i++) {\n    buttonNumbers.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Blockchain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Blockchain\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, blockchain.map(block => React.createElement(Block, {\n    key: block.hash,\n    block: block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, buttonNumbers.map(number => {\n    const start = number * PAGE_RANGE;\n    const end = (number + 1) * PAGE_RANGE;\n    return React.createElement(\"span\", {\n      key: number,\n      onClick: () => fetchBlockchainPage({\n        start,\n        end\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, number + 1), \" \", ' ');\n  })));\n}\n\nexport default Blockchain;","map":{"version":3,"sources":["/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/src/components/Blockchain.js"],"names":["React","useState","useEffect","API_BASE_URL","Block","Link","Button","PAGE_RANGE","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","fetch","then","response","json","buttonNumbers","i","Math","ceil","push","map","block","hash","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,MAAMC,UAAU,GAAG,CAAnB;;AAGA,SAASC,UAAT,GAAqB;AAAA,oBACmBP,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QACVQ,UADU;AAAA,QACEC,aADF;;AAAA,qBAE+BT,QAAQ,CAAC,CAAD,CAFvC;AAAA;AAAA,QAEVU,gBAFU;AAAA,QAEQC,mBAFR;;AAIjB,QAAMC,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAmB;AAC3CC,IAAAA,KAAK,CAAE,GAAEb,YAAa,2BAA0BW,KAAM,QAAOC,GAAI,EAA5D,CAAL,CACEE,IADF,CACOC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADjB,EAEEF,IAFF,CAEOE,IAAI,IAAET,aAAa,CAACS,IAAD,CAF1B;AAGH,GAJD;;AAMAjB,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,mBAAmB,CAAC;AAACC,MAAAA,KAAK,EAAC,CAAP;AAAUC,MAAAA,GAAG,EAACR;AAAd,KAAD,CAAnB;AAEAS,IAAAA,KAAK,CAAE,GAAEb,YAAa,oBAAjB,CAAL,CACCc,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEME,IAAI,IAAEP,mBAAmB,CAACO,IAAD,CAF/B;AAGH,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACC,IAAI,CAACC,IAAL,CAAUZ,gBAAgB,GAACJ,UAA3B,CAAhB,EAAwDc,CAAC,EAAzD,EAA4D;AACxDD,IAAAA,aAAa,CAACI,IAAd,CAAmBH,CAAnB;AACH;;AAEG,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,UAAU,CAACgB,GAAX,CACIC,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,IAAlB;AAAwB,IAAA,KAAK,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CAFJ,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQN,aAAa,CAACK,GAAd,CAAkBG,MAAM,IAAI;AACxB,UAAMd,KAAK,GAAGc,MAAM,GAAGrB,UAAvB;AACA,UAAMQ,GAAG,GAAG,CAACa,MAAM,GAAC,CAAR,IAAarB,UAAzB;AAEA,WACI;AAAM,MAAA,GAAG,EAAEqB,MAAX;AAAmB,MAAA,OAAO,EAAE,MAAMf,mBAAmB,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKa,MAAM,GAAC,CADZ,CADJ,OAGe,GAHf,CADJ;AAOH,GAXD,CAFR,CATJ,CADJ;AA4BP;;AAED,eAAepB,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block'\nimport {Link} from 'react-router-dom'\nimport { Button } from 'react-bootstrap';\n\nconst PAGE_RANGE = 3;\n\n\nfunction Blockchain(){\n    const [blockchain, setBlockchain] = useState([]);\n    const [blockchainLength, setBlockchainLength] = useState(0)\n\n    const fetchBlockchainPage = ({ start, end}) => {\n        fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`)\n         .then(response=>response.json())\n         .then(json=>setBlockchain(json))\n    }\n\n    useEffect(()=>{\n        fetchBlockchainPage({start:0, end:PAGE_RANGE});\n\n        fetch(`${API_BASE_URL}/blockchain/length`)\n        .then(response=>response.json())\n        .then(json=>setBlockchainLength(json))\n    }, []);\n\n    const buttonNumbers = [];\n    for (let i=0; i<Math.ceil(blockchainLength/PAGE_RANGE); i++){\n        buttonNumbers.push(i);\n    }\n\n        return (\n            <div className=\"Blockchain\">\n                <h3>Blockchain</h3>\n                <div>\n                    {\n                    blockchain.map( \n                        block => <Block key={block.hash} block={block}/>\n                    )\n                    }\n                </div>\n                <div>\n                    {\n                        buttonNumbers.map(number => {\n                            const start = number * PAGE_RANGE;\n                            const end = (number+1) * PAGE_RANGE;\n                            \n                            return (\n                                <span key={number} onClick={() => fetchBlockchainPage({ start, end})}>\n                                    <Button variant=\"danger\" size=\"sm\">\n                                        {number+1}\n                                    </Button> {' '}\n                                </span>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n}\n\nexport default Blockchain;"]},"metadata":{},"sourceType":"module"}