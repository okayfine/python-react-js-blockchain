{"ast":null,"code":"import _slicedToArray from \"/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/src/components/Blockchain.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\nimport { Button } from 'react-bootstrap';\nconst PAGE_RANGE = 3;\n\nfunction Blockchain() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blockchain = _useState2[0],\n        setBlockchain = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        blockchainLength = _useState4[0],\n        setBlockchainLength = _useState4[1];\n\n  const fetchBlockchainPage = ({\n    start,\n    end\n  }) => {\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`).then(response => response.json()).then(json => setBlockchain(json));\n  };\n\n  useEffect(() => {\n    fetchBlockchainPage({\n      start: 0,\n      end: PAGE_RANGE\n    });\n    useEffect(() => {\n      fetch(`${API_BASE_URL}/blockchain/length`).then(response => response.json()).then(json => setBlockchainLength(json));\n    }, []);\n    const buttonNumbers = [];\n\n    for (let i = 0; i < Math.ceil(blockchainLength / PAGE_RANGE); i++) {\n      buttonNumbers.push(i);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Blockchain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Blockchain\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, blockchain.map(block => React.createElement(Block, {\n      key: block.hash,\n      block: block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, buttonNumbers.map(number => {\n      const start = number * PAGE_RANGE;\n      const end = (number + 1) * PAGE_RANGE;\n      return React.createElement(\"span\", {\n        key: number,\n        onClick: () => fetchBlockchainPage({\n          start,\n          end\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, number + 1), \" \", ' ');\n    })));\n  });\n}\n\nexport default Blockchain;","map":{"version":3,"sources":["/Users/lionellobo/Desktop/programming/testingNewThings/python-blockchain/frontend/src/components/Blockchain.js"],"names":["React","useState","useEffect","API_BASE_URL","Block","Button","PAGE_RANGE","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","fetch","then","response","json","buttonNumbers","i","Math","ceil","push","map","block","hash","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,MAAMC,UAAU,GAAG,CAAnB;;AAGA,SAASC,UAAT,GAAqB;AAAA,oBACmBN,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QACVO,UADU;AAAA,QACEC,aADF;;AAAA,qBAE+BR,QAAQ,CAAC,CAAD,CAFvC;AAAA;AAAA,QAEVS,gBAFU;AAAA,QAEQC,mBAFR;;AAIjB,QAAMC,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAmB;AAC3CC,IAAAA,KAAK,CAAE,GAAEZ,YAAa,2BAA0BU,KAAM,QAAOC,GAAI,EAA5D,CAAL,CACEE,IADF,CACOC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADjB,EAEEF,IAFF,CAEOE,IAAI,IAAET,aAAa,CAACS,IAAD,CAF1B;AAGH,GAJD;;AAMAhB,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,mBAAmB,CAAC;AAACC,MAAAA,KAAK,EAAC,CAAP;AAAUC,MAAAA,GAAG,EAACR;AAAd,KAAD,CAAnB;AAEJJ,IAAAA,SAAS,CAAC,MAAI;AACVa,MAAAA,KAAK,CAAE,GAAEZ,YAAa,oBAAjB,CAAL,CACCa,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEME,IAAI,IAAEP,mBAAmB,CAACO,IAAD,CAF/B;AAGH,KAJQ,EAIN,EAJM,CAAT;AAMA,UAAMC,aAAa,GAAG,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACC,IAAI,CAACC,IAAL,CAAUZ,gBAAgB,GAACJ,UAA3B,CAAhB,EAAwDc,CAAC,EAAzD,EAA4D;AACxDD,MAAAA,aAAa,CAACI,IAAd,CAAmBH,CAAnB;AACH;;AAEO,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIZ,UAAU,CAACgB,GAAX,CACIC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,IAAlB;AAAwB,MAAA,KAAK,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CAFJ,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQN,aAAa,CAACK,GAAd,CAAkBG,MAAM,IAAI;AACxB,YAAMd,KAAK,GAAGc,MAAM,GAAGrB,UAAvB;AACA,YAAMQ,GAAG,GAAG,CAACa,MAAM,GAAC,CAAR,IAAarB,UAAzB;AAEA,aACI;AAAM,QAAA,GAAG,EAAEqB,MAAX;AAAmB,QAAA,OAAO,EAAE,MAAMf,mBAAmB,CAAC;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKa,MAAM,GAAC,CADZ,CADJ,OAGe,GAHf,CADJ;AAOH,KAXD,CAFR,CATJ,CADJ;AA4BP,GA1CQ,CAAT;AA2CH;;AAED,eAAepB,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block'\nimport { Button } from 'react-bootstrap';\n\nconst PAGE_RANGE = 3;\n\n\nfunction Blockchain(){\n    const [blockchain, setBlockchain] = useState([]);\n    const [blockchainLength, setBlockchainLength] = useState(0)\n\n    const fetchBlockchainPage = ({ start, end}) => {\n        fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`)\n         .then(response=>response.json())\n         .then(json=>setBlockchain(json))\n    }\n\n    useEffect(()=>{\n        fetchBlockchainPage({start:0, end:PAGE_RANGE});\n\n    useEffect(()=>{\n        fetch(`${API_BASE_URL}/blockchain/length`)\n        .then(response=>response.json())\n        .then(json=>setBlockchainLength(json))\n    }, []);\n\n    const buttonNumbers = [];\n    for (let i=0; i<Math.ceil(blockchainLength/PAGE_RANGE); i++){\n        buttonNumbers.push(i);\n    }\n\n            return (\n                <div className=\"Blockchain\">\n                    <h3>Blockchain</h3>\n                    <div>\n                        {\n                        blockchain.map( \n                            block => <Block key={block.hash} block={block}/>\n                        )\n                        }\n                    </div>\n                    <div>\n                        {\n                            buttonNumbers.map(number => {\n                                const start = number * PAGE_RANGE;\n                                const end = (number+1) * PAGE_RANGE;\n                                \n                                return (\n                                    <span key={number} onClick={() => fetchBlockchainPage({ start, end})}>\n                                        <Button variant=\"danger\" size=\"sm\">\n                                            {number+1}\n                                        </Button> {' '}\n                                    </span>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            )\n    })\n}\n\nexport default Blockchain;"]},"metadata":{},"sourceType":"module"}